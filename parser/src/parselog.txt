   yacc.py: 360:PLY: PARSE DEBUG START
   yacc.py: 408:
   yacc.py: 409:State  : 0
   yacc.py: 433:Stack  : . LexToken(function,'function',1,0)
   yacc.py: 443:Action : Shift and goto state 12
   yacc.py: 408:
   yacc.py: 409:State  : 12
   yacc.py: 433:Stack  : function . LexToken(ID,'complex',1,9)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : function ID . LexToken(SDOT,'.',1,16)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['complex'] and goto state 59
   yacc.py: 503:Result : <node @ 0x7f6999ee8690> (<__main__.node object at 0x7f6999ee8690>)
   yacc.py: 408:
   yacc.py: 409:State  : 59
   yacc.py: 433:Stack  : function names . LexToken(SDOT,'.',1,16)
   yacc.py: 443:Action : Shift and goto state 120
   yacc.py: 408:
   yacc.py: 409:State  : 120
   yacc.py: 433:Stack  : function names SDOT . LexToken(ID,'to',1,17)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : function names SDOT ID . LexToken(LPAREN,'(',1,19)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['to'] and goto state 177
   yacc.py: 503:Result : <node @ 0x7f69a0bdb3d0> (<__main__.node object at 0x7f69a0bdb3d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 177
   yacc.py: 433:Stack  : function names SDOT names . LexToken(LPAREN,'(',1,19)
   yacc.py: 573:Error  : function names SDOT names . LexToken(LPAREN,'(',1,19)
   yacc.py: 408:
   yacc.py: 409:State  : 177
   yacc.py: 433:Stack  : function names SDOT names . error
   yacc.py: 573:Error  : function names SDOT names . error
   yacc.py: 408:
   yacc.py: 409:State  : 120
   yacc.py: 433:Stack  : function names SDOT . error
   yacc.py: 573:Error  : function names SDOT . error
   yacc.py: 408:
   yacc.py: 409:State  : 59
   yacc.py: 433:Stack  : function names . error
   yacc.py: 573:Error  : function names . error
   yacc.py: 408:
   yacc.py: 409:State  : 12
   yacc.py: 433:Stack  : function . error
   yacc.py: 573:Error  : function . error
   yacc.py: 408:
   yacc.py: 409:State  : 0
   yacc.py: 433:Stack  : . error
   yacc.py: 573:Error  : . error
   yacc.py: 408:
   yacc.py: 409:State  : 0
   yacc.py: 433:Stack  : . LexToken(ID,'num',1,21)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : ID . LexToken(RPAREN,')',1,25)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f69a0bdb3d0> (<__main__.node object at 0x7f69a0bdb3d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : names . LexToken(RPAREN,')',1,25)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f69a0bdb3d0>] and goto state 9
   yacc.py: 503:Result : <node @ 0x7f6999f52c50> (<__main__.node object at 0x7f6999f52c50>)
   yacc.py: 408:
   yacc.py: 409:State  : 9
   yacc.py: 433:Stack  : var . LexToken(RPAREN,')',1,25)
   yacc.py: 573:Error  : var . LexToken(RPAREN,')',1,25)
   yacc.py: 408:
   yacc.py: 409:State  : 9
   yacc.py: 433:Stack  : var . error
   yacc.py: 573:Error  : var . error
   yacc.py: 408:
   yacc.py: 409:State  : 0
   yacc.py: 433:Stack  : . error
   yacc.py: 573:Error  : . error
   yacc.py: 408:
   yacc.py: 409:State  : 0
   yacc.py: 433:Stack  : . LexToken(if,'if',1,57)
   yacc.py: 443:Action : Shift and goto state 5
   yacc.py: 408:
   yacc.py: 409:State  : 5
   yacc.py: 433:Stack  : if . LexToken(ID,'type',1,60)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if ID . LexToken(LPAREN,'(',1,64)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['type'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f69a0bdb3d0> (<__main__.node object at 0x7f69a0bdb3d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if names . LexToken(LPAREN,'(',1,64)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f69a0bdb3d0>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999f03390> (<__main__.node object at 0x7f6999f03390>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if var . LexToken(LPAREN,'(',1,64)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999f03390>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999f52c50> (<__main__.node object at 0x7f6999f52c50>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if prefixexp . LexToken(LPAREN,'(',1,64)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : if prefixexp LPAREN . LexToken(ID,'num',1,66)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if prefixexp LPAREN ID . LexToken(RPAREN,')',1,70)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999f52c90> (<__main__.node object at 0x7f6999f52c90>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if prefixexp LPAREN names . LexToken(RPAREN,')',1,70)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999f52c90>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999ea2490> (<__main__.node object at 0x7f6999ea2490>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if prefixexp LPAREN var . LexToken(RPAREN,')',1,70)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999ea2490>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999ea2510> (<__main__.node object at 0x7f6999ea2510>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if prefixexp LPAREN prefixexp . LexToken(RPAREN,')',1,70)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999ea2510>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999ea2550> (<__main__.node object at 0x7f6999ea2550>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : if prefixexp LPAREN exp . LexToken(RPAREN,')',1,70)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999ea2550>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999ea2590> (<__main__.node object at 0x7f6999ea2590>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : if prefixexp LPAREN explist . LexToken(RPAREN,')',1,70)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : if prefixexp LPAREN explist RPAREN . LexToken(CHECKEQ,'==',1,72)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999ea2590>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999ea2650> (<__main__.node object at 0x7f6999ea2650>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : if prefixexp args . LexToken(CHECKEQ,'==',1,72)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999f52c50>,<node @ 0x7f6999ea2650>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f69a0bf2ad0> (<__main__.node object at 0x7f69a0bf2ad0>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : if functioncall . LexToken(CHECKEQ,'==',1,72)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f69a0bf2ad0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999ea24d0> (<__main__.node object at 0x7f6999ea24d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if prefixexp . LexToken(CHECKEQ,'==',1,72)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999ea24d0>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999ea2690> (<__main__.node object at 0x7f6999ea2690>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : if exp . LexToken(CHECKEQ,'==',1,72)
   yacc.py: 443:Action : Shift and goto state 92
   yacc.py: 408:
   yacc.py: 409:State  : 92
   yacc.py: 433:Stack  : if exp CHECKEQ . LexToken(STRING,'"table"',1,75)
   yacc.py: 443:Action : Shift and goto state 27
   yacc.py: 408:
   yacc.py: 409:State  : 27
   yacc.py: 433:Stack  : if exp CHECKEQ STRING . LexToken(then,'then',1,83)
   yacc.py: 469:Action : Reduce rule [exp -> STRING] with ['"table"'] and goto state 156
   yacc.py: 503:Result : <node @ 0x7f6999ea26d0> (<__main__.node object at 0x7f6999ea26d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 156
   yacc.py: 433:Stack  : if exp CHECKEQ exp . LexToken(then,'then',1,83)
   yacc.py: 469:Action : Reduce rule [exp -> exp CHECKEQ exp] with [<node @ 0x7f6999ea2690>,'==',<node @ 0x7f6999ea26d0>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999ea25d0> (<__main__.node object at 0x7f6999ea25d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : if exp . LexToken(then,'then',1,83)
   yacc.py: 443:Action : Shift and goto state 104
   yacc.py: 408:
   yacc.py: 409:State  : 104
   yacc.py: 433:Stack  : if exp then . LexToken(if,'if',1,130)
   yacc.py: 443:Action : Shift and goto state 5
   yacc.py: 408:
   yacc.py: 409:State  : 5
   yacc.py: 433:Stack  : if exp then if . LexToken(ID,'getmetatable',1,133)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then if ID . LexToken(LPAREN,'(',1,145)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['getmetatable'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999ea2610> (<__main__.node object at 0x7f6999ea2610>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then if names . LexToken(LPAREN,'(',1,145)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999ea2610>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999ea27d0> (<__main__.node object at 0x7f6999ea27d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then if var . LexToken(LPAREN,'(',1,145)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999ea27d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999ea2790> (<__main__.node object at 0x7f6999ea2790>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then if prefixexp . LexToken(LPAREN,'(',1,145)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN . LexToken(ID,'num',1,147)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN ID . LexToken(RPAREN,')',1,151)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999ea2850> (<__main__.node object at 0x7f6999ea2850>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN names . LexToken(RPAREN,')',1,151)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999ea2850>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999ea2890> (<__main__.node object at 0x7f6999ea2890>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN var . LexToken(RPAREN,')',1,151)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999ea2890>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999ea2910> (<__main__.node object at 0x7f6999ea2910>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN prefixexp . LexToken(RPAREN,')',1,151)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999ea2910>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999ea2950> (<__main__.node object at 0x7f6999ea2950>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN exp . LexToken(RPAREN,')',1,151)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999ea2950>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999ea2990> (<__main__.node object at 0x7f6999ea2990>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN explist . LexToken(RPAREN,')',1,151)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : if exp then if prefixexp LPAREN explist RPAREN . LexToken(CHECKEQ,'==',1,153)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999ea2990>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999ea2a50> (<__main__.node object at 0x7f6999ea2a50>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : if exp then if prefixexp args . LexToken(CHECKEQ,'==',1,153)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999ea2790>,<node @ 0x7f6999ea2a50>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f6999ea2810> (<__main__.node object at 0x7f6999ea2810>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : if exp then if functioncall . LexToken(CHECKEQ,'==',1,153)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f6999ea2810>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999ea28d0> (<__main__.node object at 0x7f6999ea28d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then if prefixexp . LexToken(CHECKEQ,'==',1,153)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999ea28d0>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999ea2a90> (<__main__.node object at 0x7f6999ea2a90>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : if exp then if exp . LexToken(CHECKEQ,'==',1,153)
   yacc.py: 443:Action : Shift and goto state 92
   yacc.py: 408:
   yacc.py: 409:State  : 92
   yacc.py: 433:Stack  : if exp then if exp CHECKEQ . LexToken(ID,'complex_meta',1,156)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then if exp CHECKEQ ID . LexToken(then,'then',1,169)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['complex_meta'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999ea2ad0> (<__main__.node object at 0x7f6999ea2ad0>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then if exp CHECKEQ names . LexToken(then,'then',1,169)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999ea2ad0>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999ea29d0> (<__main__.node object at 0x7f6999ea29d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then if exp CHECKEQ var . LexToken(then,'then',1,169)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999ea29d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999ea2b50> (<__main__.node object at 0x7f6999ea2b50>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then if exp CHECKEQ prefixexp . LexToken(then,'then',1,169)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999ea2b50>] and goto state 156
   yacc.py: 503:Result : <node @ 0x7f6999ea2b90> (<__main__.node object at 0x7f6999ea2b90>)
   yacc.py: 408:
   yacc.py: 409:State  : 156
   yacc.py: 433:Stack  : if exp then if exp CHECKEQ exp . LexToken(then,'then',1,169)
   yacc.py: 469:Action : Reduce rule [exp -> exp CHECKEQ exp] with [<node @ 0x7f6999ea2a90>,'==',<node @ 0x7f6999ea2b90>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999ea2c10> (<__main__.node object at 0x7f6999ea2c10>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : if exp then if exp . LexToken(then,'then',1,169)
   yacc.py: 443:Action : Shift and goto state 104
   yacc.py: 408:
   yacc.py: 409:State  : 104
   yacc.py: 433:Stack  : if exp then if exp then . LexToken(return,'return',1,183)
   yacc.py: 443:Action : Shift and goto state 16
   yacc.py: 408:
   yacc.py: 409:State  : 16
   yacc.py: 433:Stack  : if exp then if exp then return . LexToken(ID,'num',1,190)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then if exp then return ID . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999ea2a10> (<__main__.node object at 0x7f6999ea2a10>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then if exp then return names . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999ea2a10>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999ea2c90> (<__main__.node object at 0x7f6999ea2c90>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then if exp then return var . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999ea2c90>] and goto state 67
   yacc.py: 503:Result : <node @ 0x7f6999ea2c50> (<__main__.node object at 0x7f6999ea2c50>)
   yacc.py: 408:
   yacc.py: 409:State  : 67
   yacc.py: 433:Stack  : if exp then if exp then return prefixexp . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [retexp -> prefixexp] with [<node @ 0x7f6999ea2c50>] and goto state 68
   yacc.py: 503:Result : <node @ 0x7f6999ea2d10> (<__main__.node object at 0x7f6999ea2d10>)
   yacc.py: 408:
   yacc.py: 409:State  : 68
   yacc.py: 433:Stack  : if exp then if exp then return retexp . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [retexplist -> retexp] with [<node @ 0x7f6999ea2d10>] and goto state 73
   yacc.py: 503:Result : <node @ 0x7f6999ea2d50> (<__main__.node object at 0x7f6999ea2d50>)
   yacc.py: 408:
   yacc.py: 409:State  : 73
   yacc.py: 433:Stack  : if exp then if exp then return retexplist . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [laststat -> return retexplist] with ['return',<node @ 0x7f6999ea2d50>] and goto state 8
   yacc.py: 503:Result : <node @ 0x7f6999ea2dd0> (<__main__.node object at 0x7f6999ea2dd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 8
   yacc.py: 433:Stack  : if exp then if exp then laststat . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [sdash -> laststat] with [<node @ 0x7f6999ea2dd0>] and goto state 60
   yacc.py: 503:Result : <node @ 0x7f6999ea2bd0> (<__main__.node object at 0x7f6999ea2bd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 60
   yacc.py: 433:Stack  : if exp then if exp then sdash . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [block -> sdash] with [<node @ 0x7f6999ea2bd0>] and goto state 165
   yacc.py: 503:Result : <node @ 0x7f6999ea2d90> (<__main__.node object at 0x7f6999ea2d90>)
   yacc.py: 408:
   yacc.py: 409:State  : 165
   yacc.py: 433:Stack  : if exp then if exp then block . LexToken(end,'end',1,200)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 204
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 204
   yacc.py: 433:Stack  : if exp then if exp then block empty . LexToken(end,'end',1,200)
   yacc.py: 469:Action : Reduce rule [ifblock -> empty] with [None] and goto state 205
   yacc.py: 503:Result : <node @ 0x7f6999ea2e10> (<__main__.node object at 0x7f6999ea2e10>)
   yacc.py: 408:
   yacc.py: 409:State  : 205
   yacc.py: 433:Stack  : if exp then if exp then block ifblock . LexToken(end,'end',1,200)
   yacc.py: 443:Action : Shift and goto state 218
   yacc.py: 408:
   yacc.py: 409:State  : 218
   yacc.py: 433:Stack  : if exp then if exp then block ifblock end . LexToken(local,'local',1,210)
   yacc.py: 469:Action : Reduce rule [stat -> if exp then block ifblock end] with ['if',<node @ 0x7f6999ea2c10>,'then',<node @ 0x7f6999ea2d90>,<node @ 0x7f6999ea2e10>,'end'] and goto state 14
   yacc.py: 503:Result : <node @ 0x7f6999ea2ed0> (<__main__.node object at 0x7f6999ea2ed0>)
   yacc.py: 408:
   yacc.py: 409:State  : 14
   yacc.py: 433:Stack  : if exp then stat . LexToken(local,'local',1,210)
   yacc.py: 469:Action : Reduce rule [chunk -> stat] with [<node @ 0x7f6999ea2ed0>] and goto state 3
   yacc.py: 503:Result : <node @ 0x7f6999ea2750> (<__main__.node object at 0x7f6999ea2750>)
   yacc.py: 408:
   yacc.py: 409:State  : 3
   yacc.py: 433:Stack  : if exp then chunk . LexToken(local,'local',1,210)
   yacc.py: 443:Action : Shift and goto state 11
   yacc.py: 408:
   yacc.py: 409:State  : 11
   yacc.py: 433:Stack  : if exp then chunk local . LexToken(ID,'real',1,216)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk local ID . LexToken(COMMA,',',1,220)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['real'] and goto state 57
   yacc.py: 503:Result : <node @ 0x7f6999ea2b10> (<__main__.node object at 0x7f6999ea2b10>)
   yacc.py: 408:
   yacc.py: 409:State  : 57
   yacc.py: 433:Stack  : if exp then chunk local names . LexToken(COMMA,',',1,220)
   yacc.py: 443:Action : Shift and goto state 115
   yacc.py: 408:
   yacc.py: 409:State  : 115
   yacc.py: 433:Stack  : if exp then chunk local names COMMA . LexToken(ID,'imag',1,221)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk local names COMMA ID . LexToken(EQUALS,'=',1,226)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['imag'] and goto state 172
   yacc.py: 503:Result : <node @ 0x7f6999ea2cd0> (<__main__.node object at 0x7f6999ea2cd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 172
   yacc.py: 433:Stack  : if exp then chunk local names COMMA names . LexToken(EQUALS,'=',1,226)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 116
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 116
   yacc.py: 433:Stack  : if exp then chunk local names COMMA names empty . LexToken(EQUALS,'=',1,226)
   yacc.py: 469:Action : Reduce rule [comid -> empty] with [None] and goto state 207
   yacc.py: 503:Result : <node @ 0x7f6999ea2f50> (<__main__.node object at 0x7f6999ea2f50>)
   yacc.py: 408:
   yacc.py: 409:State  : 207
   yacc.py: 433:Stack  : if exp then chunk local names COMMA names comid . LexToken(EQUALS,'=',1,226)
   yacc.py: 469:Action : Reduce rule [comid -> COMMA names comid] with [',',<node @ 0x7f6999ea2cd0>,<node @ 0x7f6999ea2f50>] and goto state 117
   yacc.py: 503:Result : <node @ 0x7f6999ea2fd0> (<__main__.node object at 0x7f6999ea2fd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 117
   yacc.py: 433:Stack  : if exp then chunk local names comid . LexToken(EQUALS,'=',1,226)
   yacc.py: 469:Action : Reduce rule [namelist -> names comid] with [<node @ 0x7f6999ea2b10>,<node @ 0x7f6999ea2fd0>] and goto state 56
   yacc.py: 503:Result : <node @ 0x7f6999ea2f10> (<__main__.node object at 0x7f6999ea2f10>)
   yacc.py: 408:
   yacc.py: 409:State  : 56
   yacc.py: 433:Stack  : if exp then chunk local namelist . LexToken(EQUALS,'=',1,226)
   yacc.py: 443:Action : Shift and goto state 114
   yacc.py: 408:
   yacc.py: 409:State  : 114
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS . LexToken(ID,'tonumber',1,228)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS ID . LexToken(LPAREN,'(',1,236)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['tonumber'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999ea2e50> (<__main__.node object at 0x7f6999ea2e50>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS names . LexToken(LPAREN,'(',1,236)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999ea2e50>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf050> (<__main__.node object at 0x7f6999eaf050>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS var . LexToken(LPAREN,'(',1,236)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf050>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf0d0> (<__main__.node object at 0x7f6999eaf0d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp . LexToken(LPAREN,'(',1,236)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN . LexToken(ID,'num',1,238)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN ID . LexToken(LSQUARE,'[',1,241)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eaf110> (<__main__.node object at 0x7f6999eaf110>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN names . LexToken(LSQUARE,'[',1,241)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eaf110>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf150> (<__main__.node object at 0x7f6999eaf150>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN var . LexToken(LSQUARE,'[',1,241)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf150>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf1d0> (<__main__.node object at 0x7f6999eaf1d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp . LexToken(LSQUARE,'[',1,241)
   yacc.py: 443:Action : Shift and goto state 46
   yacc.py: 408:
   yacc.py: 409:State  : 46
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp LSQUARE . LexToken(INTEGER,'1',1,242)
   yacc.py: 443:Action : Shift and goto state 30
   yacc.py: 408:
   yacc.py: 409:State  : 30
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp LSQUARE INTEGER . LexToken(RSQUARE,']',1,243)
   yacc.py: 469:Action : Reduce rule [Number -> INTEGER] with ['1'] and goto state 37
   yacc.py: 503:Result : <node @ 0x7f6999eaf210> (<__main__.node object at 0x7f6999eaf210>)
   yacc.py: 408:
   yacc.py: 409:State  : 37
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp LSQUARE Number . LexToken(RSQUARE,']',1,243)
   yacc.py: 469:Action : Reduce rule [exp -> Number] with [<node @ 0x7f6999eaf210>] and goto state 105
   yacc.py: 503:Result : <node @ 0x7f6999eaf250> (<__main__.node object at 0x7f6999eaf250>)
   yacc.py: 408:
   yacc.py: 409:State  : 105
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp LSQUARE exp . LexToken(RSQUARE,']',1,243)
   yacc.py: 443:Action : Shift and goto state 166
   yacc.py: 408:
   yacc.py: 409:State  : 166
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp LSQUARE exp RSQUARE . LexToken(RPAREN,')',1,245)
   yacc.py: 469:Action : Reduce rule [var -> prefixexp LSQUARE exp RSQUARE] with [<node @ 0x7f6999eaf1d0>,'[',<node @ 0x7f6999eaf250>,']'] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf350> (<__main__.node object at 0x7f6999eaf350>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN var . LexToken(RPAREN,')',1,245)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf350>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf190> (<__main__.node object at 0x7f6999eaf190>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN prefixexp . LexToken(RPAREN,')',1,245)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eaf190>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eaf290> (<__main__.node object at 0x7f6999eaf290>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN exp . LexToken(RPAREN,')',1,245)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eaf290>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eaf390> (<__main__.node object at 0x7f6999eaf390>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN explist . LexToken(RPAREN,')',1,245)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp LPAREN explist RPAREN . LexToken(COMMA,',',1,246)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999eaf390>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999eaf410> (<__main__.node object at 0x7f6999eaf410>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp args . LexToken(COMMA,',',1,246)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999eaf0d0>,<node @ 0x7f6999eaf410>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f6999eaf090> (<__main__.node object at 0x7f6999eaf090>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS functioncall . LexToken(COMMA,',',1,246)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f6999eaf090>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf310> (<__main__.node object at 0x7f6999eaf310>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS prefixexp . LexToken(COMMA,',',1,246)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eaf310>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eaf450> (<__main__.node object at 0x7f6999eaf450>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS exp . LexToken(COMMA,',',1,246)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eaf450>] and goto state 171
   yacc.py: 503:Result : <node @ 0x7f6999eaf490> (<__main__.node object at 0x7f6999eaf490>)
   yacc.py: 408:
   yacc.py: 409:State  : 171
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist . LexToken(COMMA,',',1,246)
   yacc.py: 443:Action : Shift and goto state 167
   yacc.py: 408:
   yacc.py: 409:State  : 167
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA . LexToken(ID,'tonumber',1,247)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA ID . LexToken(LPAREN,'(',1,255)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['tonumber'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eaf2d0> (<__main__.node object at 0x7f6999eaf2d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA names . LexToken(LPAREN,'(',1,255)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eaf2d0>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf4d0> (<__main__.node object at 0x7f6999eaf4d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA var . LexToken(LPAREN,'(',1,255)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf4d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf550> (<__main__.node object at 0x7f6999eaf550>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp . LexToken(LPAREN,'(',1,255)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN . LexToken(ID,'num',1,257)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN ID . LexToken(LSQUARE,'[',1,260)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eaf590> (<__main__.node object at 0x7f6999eaf590>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN names . LexToken(LSQUARE,'[',1,260)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eaf590>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf5d0> (<__main__.node object at 0x7f6999eaf5d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN var . LexToken(LSQUARE,'[',1,260)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf5d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf650> (<__main__.node object at 0x7f6999eaf650>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp . LexToken(LSQUARE,'[',1,260)
   yacc.py: 443:Action : Shift and goto state 46
   yacc.py: 408:
   yacc.py: 409:State  : 46
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp LSQUARE . LexToken(INTEGER,'2',1,261)
   yacc.py: 443:Action : Shift and goto state 30
   yacc.py: 408:
   yacc.py: 409:State  : 30
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp LSQUARE INTEGER . LexToken(RSQUARE,']',1,262)
   yacc.py: 469:Action : Reduce rule [Number -> INTEGER] with ['2'] and goto state 37
   yacc.py: 503:Result : <node @ 0x7f6999eaf690> (<__main__.node object at 0x7f6999eaf690>)
   yacc.py: 408:
   yacc.py: 409:State  : 37
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp LSQUARE Number . LexToken(RSQUARE,']',1,262)
   yacc.py: 469:Action : Reduce rule [exp -> Number] with [<node @ 0x7f6999eaf690>] and goto state 105
   yacc.py: 503:Result : <node @ 0x7f6999eaf6d0> (<__main__.node object at 0x7f6999eaf6d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 105
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp LSQUARE exp . LexToken(RSQUARE,']',1,262)
   yacc.py: 443:Action : Shift and goto state 166
   yacc.py: 408:
   yacc.py: 409:State  : 166
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp LSQUARE exp RSQUARE . LexToken(RPAREN,')',1,264)
   yacc.py: 469:Action : Reduce rule [var -> prefixexp LSQUARE exp RSQUARE] with [<node @ 0x7f6999eaf650>,'[',<node @ 0x7f6999eaf6d0>,']'] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf7d0> (<__main__.node object at 0x7f6999eaf7d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN var . LexToken(RPAREN,')',1,264)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf7d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf610> (<__main__.node object at 0x7f6999eaf610>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN prefixexp . LexToken(RPAREN,')',1,264)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eaf610>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eaf710> (<__main__.node object at 0x7f6999eaf710>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN exp . LexToken(RPAREN,')',1,264)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eaf710>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eaf810> (<__main__.node object at 0x7f6999eaf810>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN explist . LexToken(RPAREN,')',1,264)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp LPAREN explist RPAREN . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999eaf810>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999eaf890> (<__main__.node object at 0x7f6999eaf890>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp args . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999eaf550>,<node @ 0x7f6999eaf890>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f6999eaf510> (<__main__.node object at 0x7f6999eaf510>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA functioncall . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f6999eaf510>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf790> (<__main__.node object at 0x7f6999eaf790>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA prefixexp . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eaf790>] and goto state 206
   yacc.py: 503:Result : <node @ 0x7f6999eaf8d0> (<__main__.node object at 0x7f6999eaf8d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 206
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist COMMA exp . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [explist -> explist COMMA exp] with [<node @ 0x7f6999eaf490>,',',<node @ 0x7f6999eaf8d0>] and goto state 171
   yacc.py: 503:Result : <node @ 0x7f6999eaf750> (<__main__.node object at 0x7f6999eaf750>)
   yacc.py: 408:
   yacc.py: 409:State  : 171
   yacc.py: 433:Stack  : if exp then chunk local namelist EQUALS explist . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [stat -> local namelist EQUALS explist] with ['local',<node @ 0x7f6999ea2f10>,'=',<node @ 0x7f6999eaf750>] and goto state 43
   yacc.py: 503:Result : <node @ 0x7f6999eaf3d0> (<__main__.node object at 0x7f6999eaf3d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 43
   yacc.py: 433:Stack  : if exp then chunk stat . LexToken(if,'if',1,272)
   yacc.py: 469:Action : Reduce rule [chunk -> chunk stat] with [<node @ 0x7f6999ea2750>,<node @ 0x7f6999eaf3d0>] and goto state 3
   yacc.py: 503:Result : <node @ 0x7f6999ea2e90> (<__main__.node object at 0x7f6999ea2e90>)
   yacc.py: 408:
   yacc.py: 409:State  : 3
   yacc.py: 433:Stack  : if exp then chunk . LexToken(if,'if',1,272)
   yacc.py: 443:Action : Shift and goto state 5
   yacc.py: 408:
   yacc.py: 409:State  : 5
   yacc.py: 433:Stack  : if exp then chunk if . LexToken(ID,'real',1,275)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk if ID . LexToken(and,'and',1,280)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['real'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999ea2f90> (<__main__.node object at 0x7f6999ea2f90>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk if names . LexToken(and,'and',1,280)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999ea2f90>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eaf990> (<__main__.node object at 0x7f6999eaf990>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk if var . LexToken(and,'and',1,280)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eaf990>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaf910> (<__main__.node object at 0x7f6999eaf910>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk if prefixexp . LexToken(and,'and',1,280)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eaf910>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999eaf9d0> (<__main__.node object at 0x7f6999eaf9d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : if exp then chunk if exp . LexToken(and,'and',1,280)
   yacc.py: 443:Action : Shift and goto state 85
   yacc.py: 408:
   yacc.py: 409:State  : 85
   yacc.py: 433:Stack  : if exp then chunk if exp and . LexToken(ID,'imag',1,284)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk if exp and ID . LexToken(then,'then',1,289)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['imag'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eafa10> (<__main__.node object at 0x7f6999eafa10>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk if exp and names . LexToken(then,'then',1,289)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eafa10>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eafa50> (<__main__.node object at 0x7f6999eafa50>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk if exp and var . LexToken(then,'then',1,289)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eafa50>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eafad0> (<__main__.node object at 0x7f6999eafad0>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk if exp and prefixexp . LexToken(then,'then',1,289)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eafad0>] and goto state 150
   yacc.py: 503:Result : <node @ 0x7f6999eafb10> (<__main__.node object at 0x7f6999eafb10>)
   yacc.py: 408:
   yacc.py: 409:State  : 150
   yacc.py: 433:Stack  : if exp then chunk if exp and exp . LexToken(then,'then',1,289)
   yacc.py: 469:Action : Reduce rule [exp -> exp and exp] with [<node @ 0x7f6999eaf9d0>,'and',<node @ 0x7f6999eafb10>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999eafb90> (<__main__.node object at 0x7f6999eafb90>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : if exp then chunk if exp . LexToken(then,'then',1,289)
   yacc.py: 443:Action : Shift and goto state 104
   yacc.py: 408:
   yacc.py: 409:State  : 104
   yacc.py: 433:Stack  : if exp then chunk if exp then . LexToken(return,'return',1,303)
   yacc.py: 443:Action : Shift and goto state 16
   yacc.py: 408:
   yacc.py: 409:State  : 16
   yacc.py: 433:Stack  : if exp then chunk if exp then return . LexToken(ID,'setmetatable',1,310)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk if exp then return ID . LexToken(LPAREN,'(',1,322)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['setmetatable'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eaf950> (<__main__.node object at 0x7f6999eaf950>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk if exp then return names . LexToken(LPAREN,'(',1,322)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eaf950>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eafc10> (<__main__.node object at 0x7f6999eafc10>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk if exp then return var . LexToken(LPAREN,'(',1,322)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eafc10>] and goto state 67
   yacc.py: 503:Result : <node @ 0x7f6999eafbd0> (<__main__.node object at 0x7f6999eafbd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 67
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp . LexToken(LPAREN,'(',1,322)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN . LexToken(LCURLY,'{',1,324)
   yacc.py: 443:Action : Shift and goto state 24
   yacc.py: 408:
   yacc.py: 409:State  : 24
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY . LexToken(ID,'real',1,326)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY ID . LexToken(COMMA,',',1,330)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['real'] and goto state 79
   yacc.py: 503:Result : <node @ 0x7f6999eafc90> (<__main__.node object at 0x7f6999eafc90>)
   yacc.py: 408:
   yacc.py: 409:State  : 79
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY names . LexToken(COMMA,',',1,330)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eafc90>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eafd10> (<__main__.node object at 0x7f6999eafd10>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY var . LexToken(COMMA,',',1,330)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eafd10>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eafd90> (<__main__.node object at 0x7f6999eafd90>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY prefixexp . LexToken(COMMA,',',1,330)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eafd90>] and goto state 83
   yacc.py: 503:Result : <node @ 0x7f6999eafdd0> (<__main__.node object at 0x7f6999eafdd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 83
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY exp . LexToken(COMMA,',',1,330)
   yacc.py: 469:Action : Reduce rule [field -> exp] with [<node @ 0x7f6999eafdd0>] and goto state 81
   yacc.py: 503:Result : <node @ 0x7f6999eafe10> (<__main__.node object at 0x7f6999eafe10>)
   yacc.py: 408:
   yacc.py: 409:State  : 81
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field . LexToken(COMMA,',',1,330)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 147
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 147
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field empty . LexToken(COMMA,',',1,330)
   yacc.py: 469:Action : Reduce rule [fieldseplist -> empty] with [None] and goto state 146
   yacc.py: 503:Result : <node @ 0x7f6999eafe50> (<__main__.node object at 0x7f6999eafe50>)
   yacc.py: 408:
   yacc.py: 409:State  : 146
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist . LexToken(COMMA,',',1,330)
   yacc.py: 443:Action : Shift and goto state 201
   yacc.py: 408:
   yacc.py: 409:State  : 201
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist COMMA . LexToken(ID,'imag',1,331)
   yacc.py: 469:Action : Reduce rule [fieldsep -> COMMA] with [','] and goto state 200
   yacc.py: 503:Result : <node @ 0x7f6999eafe90> (<__main__.node object at 0x7f6999eafe90>)
   yacc.py: 408:
   yacc.py: 409:State  : 200
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep . LexToken(ID,'imag',1,331)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep ID . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['imag'] and goto state 79
   yacc.py: 503:Result : <node @ 0x7f6999eafd50> (<__main__.node object at 0x7f6999eafd50>)
   yacc.py: 408:
   yacc.py: 409:State  : 79
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep names . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eafd50>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eafed0> (<__main__.node object at 0x7f6999eafed0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep var . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eafed0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eaff10> (<__main__.node object at 0x7f6999eaff10>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep prefixexp . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eaff10>] and goto state 83
   yacc.py: 503:Result : <node @ 0x7f6999eaff90> (<__main__.node object at 0x7f6999eaff90>)
   yacc.py: 408:
   yacc.py: 409:State  : 83
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep exp . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [field -> exp] with [<node @ 0x7f6999eaff90>] and goto state 216
   yacc.py: 503:Result : <node @ 0x7f6999eaffd0> (<__main__.node object at 0x7f6999eaffd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 216
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep field . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [fieldseplist -> fieldseplist fieldsep field] with [<node @ 0x7f6999eafe50>,<node @ 0x7f6999eafe90>,<node @ 0x7f6999eaffd0>] and goto state 146
   yacc.py: 503:Result : <node @ 0x7f6999eb5090> (<__main__.node object at 0x7f6999eb5090>)
   yacc.py: 408:
   yacc.py: 409:State  : 146
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist . LexToken(RCURLY,'}',1,336)
   yacc.py: 469:Action : Reduce rule [fieldlist -> field fieldseplist] with [<node @ 0x7f6999eafe10>,<node @ 0x7f6999eb5090>] and goto state 82
   yacc.py: 503:Result : <node @ 0x7f6999eb5110> (<__main__.node object at 0x7f6999eb5110>)
   yacc.py: 408:
   yacc.py: 409:State  : 82
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY fieldlist . LexToken(RCURLY,'}',1,336)
   yacc.py: 443:Action : Shift and goto state 148
   yacc.py: 408:
   yacc.py: 409:State  : 148
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN LCURLY fieldlist RCURLY . LexToken(COMMA,',',1,337)
   yacc.py: 469:Action : Reduce rule [tableconstructor -> LCURLY fieldlist RCURLY] with ['{',<node @ 0x7f6999eb5110>,'}'] and goto state 22
   yacc.py: 503:Result : <node @ 0x7f6999eb5150> (<__main__.node object at 0x7f6999eb5150>)
   yacc.py: 408:
   yacc.py: 409:State  : 22
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN tableconstructor . LexToken(COMMA,',',1,337)
   yacc.py: 469:Action : Reduce rule [exp -> tableconstructor] with [<node @ 0x7f6999eb5150>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eafcd0> (<__main__.node object at 0x7f6999eafcd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN exp . LexToken(COMMA,',',1,337)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eafcd0>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eaff50> (<__main__.node object at 0x7f6999eaff50>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist . LexToken(COMMA,',',1,337)
   yacc.py: 443:Action : Shift and goto state 167
   yacc.py: 408:
   yacc.py: 409:State  : 167
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist COMMA . LexToken(ID,'complex_meta',1,339)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist COMMA ID . LexToken(RPAREN,')',1,352)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['complex_meta'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eb5050> (<__main__.node object at 0x7f6999eb5050>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist COMMA names . LexToken(RPAREN,')',1,352)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eb5050>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eb5190> (<__main__.node object at 0x7f6999eb5190>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist COMMA var . LexToken(RPAREN,')',1,352)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eb5190>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eb5210> (<__main__.node object at 0x7f6999eb5210>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist COMMA prefixexp . LexToken(RPAREN,')',1,352)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eb5210>] and goto state 206
   yacc.py: 503:Result : <node @ 0x7f6999eb5250> (<__main__.node object at 0x7f6999eb5250>)
   yacc.py: 408:
   yacc.py: 409:State  : 206
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist COMMA exp . LexToken(RPAREN,')',1,352)
   yacc.py: 469:Action : Reduce rule [explist -> explist COMMA exp] with [<node @ 0x7f6999eaff50>,',',<node @ 0x7f6999eb5250>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eb52d0> (<__main__.node object at 0x7f6999eb52d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist . LexToken(RPAREN,')',1,352)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp LPAREN explist RPAREN . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999eb52d0>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999eb50d0> (<__main__.node object at 0x7f6999eb50d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp args . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999eafbd0>,<node @ 0x7f6999eb50d0>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f6999eafc50> (<__main__.node object at 0x7f6999eafc50>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : if exp then chunk if exp then return functioncall . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f6999eafc50>] and goto state 67
   yacc.py: 503:Result : <node @ 0x7f6999eb51d0> (<__main__.node object at 0x7f6999eb51d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 67
   yacc.py: 433:Stack  : if exp then chunk if exp then return prefixexp . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [retexp -> prefixexp] with [<node @ 0x7f6999eb51d0>] and goto state 68
   yacc.py: 503:Result : <node @ 0x7f6999eb5310> (<__main__.node object at 0x7f6999eb5310>)
   yacc.py: 408:
   yacc.py: 409:State  : 68
   yacc.py: 433:Stack  : if exp then chunk if exp then return retexp . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [retexplist -> retexp] with [<node @ 0x7f6999eb5310>] and goto state 73
   yacc.py: 503:Result : <node @ 0x7f6999eb5390> (<__main__.node object at 0x7f6999eb5390>)
   yacc.py: 408:
   yacc.py: 409:State  : 73
   yacc.py: 433:Stack  : if exp then chunk if exp then return retexplist . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [laststat -> return retexplist] with ['return',<node @ 0x7f6999eb5390>] and goto state 8
   yacc.py: 503:Result : <node @ 0x7f6999eb53d0> (<__main__.node object at 0x7f6999eb53d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 8
   yacc.py: 433:Stack  : if exp then chunk if exp then laststat . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [sdash -> laststat] with [<node @ 0x7f6999eb53d0>] and goto state 60
   yacc.py: 503:Result : <node @ 0x7f6999eafb50> (<__main__.node object at 0x7f6999eafb50>)
   yacc.py: 408:
   yacc.py: 409:State  : 60
   yacc.py: 433:Stack  : if exp then chunk if exp then sdash . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [block -> sdash] with [<node @ 0x7f6999eafb50>] and goto state 165
   yacc.py: 503:Result : <node @ 0x7f6999eb5350> (<__main__.node object at 0x7f6999eb5350>)
   yacc.py: 408:
   yacc.py: 409:State  : 165
   yacc.py: 433:Stack  : if exp then chunk if exp then block . LexToken(end,'end',1,360)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 204
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 204
   yacc.py: 433:Stack  : if exp then chunk if exp then block empty . LexToken(end,'end',1,360)
   yacc.py: 469:Action : Reduce rule [ifblock -> empty] with [None] and goto state 205
   yacc.py: 503:Result : <node @ 0x7f6999eb5410> (<__main__.node object at 0x7f6999eb5410>)
   yacc.py: 408:
   yacc.py: 409:State  : 205
   yacc.py: 433:Stack  : if exp then chunk if exp then block ifblock . LexToken(end,'end',1,360)
   yacc.py: 443:Action : Shift and goto state 218
   yacc.py: 408:
   yacc.py: 409:State  : 218
   yacc.py: 433:Stack  : if exp then chunk if exp then block ifblock end . LexToken(return,'return',1,370)
   yacc.py: 469:Action : Reduce rule [stat -> if exp then block ifblock end] with ['if',<node @ 0x7f6999eafb90>,'then',<node @ 0x7f6999eb5350>,<node @ 0x7f6999eb5410>,'end'] and goto state 43
   yacc.py: 503:Result : <node @ 0x7f6999eb54d0> (<__main__.node object at 0x7f6999eb54d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 43
   yacc.py: 433:Stack  : if exp then chunk stat . LexToken(return,'return',1,370)
   yacc.py: 469:Action : Reduce rule [chunk -> chunk stat] with [<node @ 0x7f6999ea2e90>,<node @ 0x7f6999eb54d0>] and goto state 3
   yacc.py: 503:Result : <node @ 0x7f6999eaf850> (<__main__.node object at 0x7f6999eaf850>)
   yacc.py: 408:
   yacc.py: 409:State  : 3
   yacc.py: 433:Stack  : if exp then chunk . LexToken(return,'return',1,370)
   yacc.py: 443:Action : Shift and goto state 16
   yacc.py: 408:
   yacc.py: 409:State  : 16
   yacc.py: 433:Stack  : if exp then chunk return . LexToken(end,'end',1,380)
   yacc.py: 469:Action : Reduce rule [laststat -> return] with ['return'] and goto state 42
   yacc.py: 503:Result : <node @ 0x7f6999eafa90> (<__main__.node object at 0x7f6999eafa90>)
   yacc.py: 408:
   yacc.py: 409:State  : 42
   yacc.py: 433:Stack  : if exp then chunk laststat . LexToken(end,'end',1,380)
   yacc.py: 469:Action : Reduce rule [sdash -> chunk laststat] with [<node @ 0x7f6999eaf850>,<node @ 0x7f6999eafa90>] and goto state 60
   yacc.py: 503:Result : <node @ 0x7f6999eb5490> (<__main__.node object at 0x7f6999eb5490>)
   yacc.py: 408:
   yacc.py: 409:State  : 60
   yacc.py: 433:Stack  : if exp then sdash . LexToken(end,'end',1,380)
   yacc.py: 469:Action : Reduce rule [block -> sdash] with [<node @ 0x7f6999eb5490>] and goto state 165
   yacc.py: 503:Result : <node @ 0x7f6999eb5450> (<__main__.node object at 0x7f6999eb5450>)
   yacc.py: 408:
   yacc.py: 409:State  : 165
   yacc.py: 433:Stack  : if exp then block . LexToken(end,'end',1,380)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 204
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 204
   yacc.py: 433:Stack  : if exp then block empty . LexToken(end,'end',1,380)
   yacc.py: 469:Action : Reduce rule [ifblock -> empty] with [None] and goto state 205
   yacc.py: 503:Result : <node @ 0x7f6999eb5510> (<__main__.node object at 0x7f6999eb5510>)
   yacc.py: 408:
   yacc.py: 409:State  : 205
   yacc.py: 433:Stack  : if exp then block ifblock . LexToken(end,'end',1,380)
   yacc.py: 443:Action : Shift and goto state 218
   yacc.py: 408:
   yacc.py: 409:State  : 218
   yacc.py: 433:Stack  : if exp then block ifblock end . LexToken(local,'local',1,410)
   yacc.py: 469:Action : Reduce rule [stat -> if exp then block ifblock end] with ['if',<node @ 0x7f6999ea25d0>,'then',<node @ 0x7f6999eb5450>,<node @ 0x7f6999eb5510>,'end'] and goto state 14
   yacc.py: 503:Result : <node @ 0x7f6999eb5590> (<__main__.node object at 0x7f6999eb5590>)
   yacc.py: 408:
   yacc.py: 409:State  : 14
   yacc.py: 433:Stack  : stat . LexToken(local,'local',1,410)
   yacc.py: 469:Action : Reduce rule [chunk -> stat] with [<node @ 0x7f6999eb5590>] and goto state 3
   yacc.py: 503:Result : <node @ 0x7f6999ee8690> (<__main__.node object at 0x7f6999ee8690>)
   yacc.py: 408:
   yacc.py: 409:State  : 3
   yacc.py: 433:Stack  : chunk . LexToken(local,'local',1,410)
   yacc.py: 443:Action : Shift and goto state 11
   yacc.py: 408:
   yacc.py: 409:State  : 11
   yacc.py: 433:Stack  : chunk local . LexToken(ID,'isnum',1,416)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk local ID . LexToken(EQUALS,'=',1,422)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['isnum'] and goto state 57
   yacc.py: 503:Result : <node @ 0x7f6999ea2710> (<__main__.node object at 0x7f6999ea2710>)
   yacc.py: 408:
   yacc.py: 409:State  : 57
   yacc.py: 433:Stack  : chunk local names . LexToken(EQUALS,'=',1,422)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 116
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 116
   yacc.py: 433:Stack  : chunk local names empty . LexToken(EQUALS,'=',1,422)
   yacc.py: 469:Action : Reduce rule [comid -> empty] with [None] and goto state 117
   yacc.py: 503:Result : <node @ 0x7f6999eb5650> (<__main__.node object at 0x7f6999eb5650>)
   yacc.py: 408:
   yacc.py: 409:State  : 117
   yacc.py: 433:Stack  : chunk local names comid . LexToken(EQUALS,'=',1,422)
   yacc.py: 469:Action : Reduce rule [namelist -> names comid] with [<node @ 0x7f6999ea2710>,<node @ 0x7f6999eb5650>] and goto state 56
   yacc.py: 503:Result : <node @ 0x7f6999eb5550> (<__main__.node object at 0x7f6999eb5550>)
   yacc.py: 408:
   yacc.py: 409:State  : 56
   yacc.py: 433:Stack  : chunk local namelist . LexToken(EQUALS,'=',1,422)
   yacc.py: 443:Action : Shift and goto state 114
   yacc.py: 408:
   yacc.py: 409:State  : 114
   yacc.py: 433:Stack  : chunk local namelist EQUALS . LexToken(ID,'tonumber',1,424)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk local namelist EQUALS ID . LexToken(LPAREN,'(',1,432)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['tonumber'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eb5690> (<__main__.node object at 0x7f6999eb5690>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : chunk local namelist EQUALS names . LexToken(LPAREN,'(',1,432)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eb5690>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eb5290> (<__main__.node object at 0x7f6999eb5290>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : chunk local namelist EQUALS var . LexToken(LPAREN,'(',1,432)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eb5290>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eb5710> (<__main__.node object at 0x7f6999eb5710>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp . LexToken(LPAREN,'(',1,432)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN . LexToken(ID,'num',1,434)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN ID . LexToken(RPAREN,')',1,438)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['num'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eb5750> (<__main__.node object at 0x7f6999eb5750>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN names . LexToken(RPAREN,')',1,438)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eb5750>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eb5790> (<__main__.node object at 0x7f6999eb5790>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN var . LexToken(RPAREN,')',1,438)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eb5790>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eb5810> (<__main__.node object at 0x7f6999eb5810>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN prefixexp . LexToken(RPAREN,')',1,438)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eb5810>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eb5850> (<__main__.node object at 0x7f6999eb5850>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN exp . LexToken(RPAREN,')',1,438)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eb5850>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eb5890> (<__main__.node object at 0x7f6999eb5890>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN explist . LexToken(RPAREN,')',1,438)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp LPAREN explist RPAREN . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999eb5890>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999eb5950> (<__main__.node object at 0x7f6999eb5950>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp args . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999eb5710>,<node @ 0x7f6999eb5950>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f6999eb56d0> (<__main__.node object at 0x7f6999eb56d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : chunk local namelist EQUALS functioncall . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f6999eb56d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eb57d0> (<__main__.node object at 0x7f6999eb57d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : chunk local namelist EQUALS prefixexp . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eb57d0>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eb5990> (<__main__.node object at 0x7f6999eb5990>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : chunk local namelist EQUALS exp . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eb5990>] and goto state 171
   yacc.py: 503:Result : <node @ 0x7f6999eb59d0> (<__main__.node object at 0x7f6999eb59d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 171
   yacc.py: 433:Stack  : chunk local namelist EQUALS explist . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [stat -> local namelist EQUALS explist] with ['local',<node @ 0x7f6999eb5550>,'=',<node @ 0x7f6999eb59d0>] and goto state 43
   yacc.py: 503:Result : <node @ 0x7f6999eb5a10> (<__main__.node object at 0x7f6999eb5a10>)
   yacc.py: 408:
   yacc.py: 409:State  : 43
   yacc.py: 433:Stack  : chunk stat . LexToken(if,'if',1,443)
   yacc.py: 469:Action : Reduce rule [chunk -> chunk stat] with [<node @ 0x7f6999ee8690>,<node @ 0x7f6999eb5a10>] and goto state 3
   yacc.py: 503:Result : <node @ 0x7f6999eb55d0> (<__main__.node object at 0x7f6999eb55d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 3
   yacc.py: 433:Stack  : chunk . LexToken(if,'if',1,443)
   yacc.py: 443:Action : Shift and goto state 5
   yacc.py: 408:
   yacc.py: 409:State  : 5
   yacc.py: 433:Stack  : chunk if . LexToken(ID,'isnum',1,446)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk if ID . LexToken(then,'then',1,452)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['isnum'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eb5610> (<__main__.node object at 0x7f6999eb5610>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : chunk if names . LexToken(then,'then',1,452)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eb5610>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eb58d0> (<__main__.node object at 0x7f6999eb58d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : chunk if var . LexToken(then,'then',1,452)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eb58d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eb5a50> (<__main__.node object at 0x7f6999eb5a50>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : chunk if prefixexp . LexToken(then,'then',1,452)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eb5a50>] and goto state 44
   yacc.py: 503:Result : <node @ 0x7f6999eb5ad0> (<__main__.node object at 0x7f6999eb5ad0>)
   yacc.py: 408:
   yacc.py: 409:State  : 44
   yacc.py: 433:Stack  : chunk if exp . LexToken(then,'then',1,452)
   yacc.py: 443:Action : Shift and goto state 104
   yacc.py: 408:
   yacc.py: 409:State  : 104
   yacc.py: 433:Stack  : chunk if exp then . LexToken(return,'return',1,463)
   yacc.py: 443:Action : Shift and goto state 16
   yacc.py: 408:
   yacc.py: 409:State  : 16
   yacc.py: 433:Stack  : chunk if exp then return . LexToken(ID,'setmetatable',1,470)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk if exp then return ID . LexToken(LPAREN,'(',1,482)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['setmetatable'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eb5b10> (<__main__.node object at 0x7f6999eb5b10>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : chunk if exp then return names . LexToken(LPAREN,'(',1,482)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eb5b10>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eb5b90> (<__main__.node object at 0x7f6999eb5b90>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : chunk if exp then return var . LexToken(LPAREN,'(',1,482)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eb5b90>] and goto state 67
   yacc.py: 503:Result : <node @ 0x7f6999eb5c10> (<__main__.node object at 0x7f6999eb5c10>)
   yacc.py: 408:
   yacc.py: 409:State  : 67
   yacc.py: 433:Stack  : chunk if exp then return prefixexp . LexToken(LPAREN,'(',1,482)
   yacc.py: 443:Action : Shift and goto state 48
   yacc.py: 408:
   yacc.py: 409:State  : 48
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN . LexToken(LCURLY,'{',1,484)
   yacc.py: 443:Action : Shift and goto state 24
   yacc.py: 408:
   yacc.py: 409:State  : 24
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY . LexToken(ID,'isnum',1,486)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY ID . LexToken(COMMA,',',1,491)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['isnum'] and goto state 79
   yacc.py: 503:Result : <node @ 0x7f6999eb5c50> (<__main__.node object at 0x7f6999eb5c50>)
   yacc.py: 408:
   yacc.py: 409:State  : 79
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY names . LexToken(COMMA,',',1,491)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eb5c50>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eb5cd0> (<__main__.node object at 0x7f6999eb5cd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY var . LexToken(COMMA,',',1,491)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eb5cd0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eb5d50> (<__main__.node object at 0x7f6999eb5d50>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY prefixexp . LexToken(COMMA,',',1,491)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eb5d50>] and goto state 83
   yacc.py: 503:Result : <node @ 0x7f6999eb5d90> (<__main__.node object at 0x7f6999eb5d90>)
   yacc.py: 408:
   yacc.py: 409:State  : 83
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY exp . LexToken(COMMA,',',1,491)
   yacc.py: 469:Action : Reduce rule [field -> exp] with [<node @ 0x7f6999eb5d90>] and goto state 81
   yacc.py: 503:Result : <node @ 0x7f6999eb5dd0> (<__main__.node object at 0x7f6999eb5dd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 81
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field . LexToken(COMMA,',',1,491)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 147
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 147
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field empty . LexToken(COMMA,',',1,491)
   yacc.py: 469:Action : Reduce rule [fieldseplist -> empty] with [None] and goto state 146
   yacc.py: 503:Result : <node @ 0x7f6999eb5e10> (<__main__.node object at 0x7f6999eb5e10>)
   yacc.py: 408:
   yacc.py: 409:State  : 146
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist . LexToken(COMMA,',',1,491)
   yacc.py: 443:Action : Shift and goto state 201
   yacc.py: 408:
   yacc.py: 409:State  : 201
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist COMMA . LexToken(INTEGER,'0',1,492)
   yacc.py: 469:Action : Reduce rule [fieldsep -> COMMA] with [','] and goto state 200
   yacc.py: 503:Result : <node @ 0x7f6999eb5e50> (<__main__.node object at 0x7f6999eb5e50>)
   yacc.py: 408:
   yacc.py: 409:State  : 200
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep . LexToken(INTEGER,'0',1,492)
   yacc.py: 443:Action : Shift and goto state 30
   yacc.py: 408:
   yacc.py: 409:State  : 30
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep INTEGER . LexToken(RCURLY,'}',1,494)
   yacc.py: 469:Action : Reduce rule [Number -> INTEGER] with ['0'] and goto state 37
   yacc.py: 503:Result : <node @ 0x7f6999eb5d10> (<__main__.node object at 0x7f6999eb5d10>)
   yacc.py: 408:
   yacc.py: 409:State  : 37
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep Number . LexToken(RCURLY,'}',1,494)
   yacc.py: 469:Action : Reduce rule [exp -> Number] with [<node @ 0x7f6999eb5d10>] and goto state 83
   yacc.py: 503:Result : <node @ 0x7f6999eb5e90> (<__main__.node object at 0x7f6999eb5e90>)
   yacc.py: 408:
   yacc.py: 409:State  : 83
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep exp . LexToken(RCURLY,'}',1,494)
   yacc.py: 469:Action : Reduce rule [field -> exp] with [<node @ 0x7f6999eb5e90>] and goto state 216
   yacc.py: 503:Result : <node @ 0x7f6999eb5ed0> (<__main__.node object at 0x7f6999eb5ed0>)
   yacc.py: 408:
   yacc.py: 409:State  : 216
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist fieldsep field . LexToken(RCURLY,'}',1,494)
   yacc.py: 469:Action : Reduce rule [fieldseplist -> fieldseplist fieldsep field] with [<node @ 0x7f6999eb5e10>,<node @ 0x7f6999eb5e50>,<node @ 0x7f6999eb5ed0>] and goto state 146
   yacc.py: 503:Result : <node @ 0x7f6999eb5f90> (<__main__.node object at 0x7f6999eb5f90>)
   yacc.py: 408:
   yacc.py: 409:State  : 146
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY field fieldseplist . LexToken(RCURLY,'}',1,494)
   yacc.py: 469:Action : Reduce rule [fieldlist -> field fieldseplist] with [<node @ 0x7f6999eb5dd0>,<node @ 0x7f6999eb5f90>] and goto state 82
   yacc.py: 503:Result : <node @ 0x7f6999eb5f50> (<__main__.node object at 0x7f6999eb5f50>)
   yacc.py: 408:
   yacc.py: 409:State  : 82
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY fieldlist . LexToken(RCURLY,'}',1,494)
   yacc.py: 443:Action : Shift and goto state 148
   yacc.py: 408:
   yacc.py: 409:State  : 148
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN LCURLY fieldlist RCURLY . LexToken(COMMA,',',1,495)
   yacc.py: 469:Action : Reduce rule [tableconstructor -> LCURLY fieldlist RCURLY] with ['{',<node @ 0x7f6999eb5f50>,'}'] and goto state 22
   yacc.py: 503:Result : <node @ 0x7f6999eb5fd0> (<__main__.node object at 0x7f6999eb5fd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 22
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN tableconstructor . LexToken(COMMA,',',1,495)
   yacc.py: 469:Action : Reduce rule [exp -> tableconstructor] with [<node @ 0x7f6999eb5fd0>] and goto state 108
   yacc.py: 503:Result : <node @ 0x7f6999eb5c90> (<__main__.node object at 0x7f6999eb5c90>)
   yacc.py: 408:
   yacc.py: 409:State  : 108
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN exp . LexToken(COMMA,',',1,495)
   yacc.py: 469:Action : Reduce rule [explist -> exp] with [<node @ 0x7f6999eb5c90>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eb5f10> (<__main__.node object at 0x7f6999eb5f10>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist . LexToken(COMMA,',',1,495)
   yacc.py: 443:Action : Shift and goto state 167
   yacc.py: 408:
   yacc.py: 409:State  : 167
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist COMMA . LexToken(ID,'complex_meta',1,497)
   yacc.py: 443:Action : Shift and goto state 18
   yacc.py: 408:
   yacc.py: 409:State  : 18
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist COMMA ID . LexToken(RPAREN,')',1,510)
   yacc.py: 469:Action : Reduce rule [names -> ID] with ['complex_meta'] and goto state 4
   yacc.py: 503:Result : <node @ 0x7f6999eba090> (<__main__.node object at 0x7f6999eba090>)
   yacc.py: 408:
   yacc.py: 409:State  : 4
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist COMMA names . LexToken(RPAREN,')',1,510)
   yacc.py: 469:Action : Reduce rule [var -> names] with [<node @ 0x7f6999eba090>] and goto state 29
   yacc.py: 503:Result : <node @ 0x7f6999eba0d0> (<__main__.node object at 0x7f6999eba0d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 29
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist COMMA var . LexToken(RPAREN,')',1,510)
   yacc.py: 469:Action : Reduce rule [prefixexp -> var] with [<node @ 0x7f6999eba0d0>] and goto state 28
   yacc.py: 503:Result : <node @ 0x7f6999eba150> (<__main__.node object at 0x7f6999eba150>)
   yacc.py: 408:
   yacc.py: 409:State  : 28
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist COMMA prefixexp . LexToken(RPAREN,')',1,510)
   yacc.py: 469:Action : Reduce rule [exp -> prefixexp] with [<node @ 0x7f6999eba150>] and goto state 206
   yacc.py: 503:Result : <node @ 0x7f6999eba190> (<__main__.node object at 0x7f6999eba190>)
   yacc.py: 408:
   yacc.py: 409:State  : 206
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist COMMA exp . LexToken(RPAREN,')',1,510)
   yacc.py: 469:Action : Reduce rule [explist -> explist COMMA exp] with [<node @ 0x7f6999eb5f10>,',',<node @ 0x7f6999eba190>] and goto state 107
   yacc.py: 503:Result : <node @ 0x7f6999eba210> (<__main__.node object at 0x7f6999eba210>)
   yacc.py: 408:
   yacc.py: 409:State  : 107
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist . LexToken(RPAREN,')',1,510)
   yacc.py: 443:Action : Shift and goto state 168
   yacc.py: 408:
   yacc.py: 409:State  : 168
   yacc.py: 433:Stack  : chunk if exp then return prefixexp LPAREN explist RPAREN . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [args -> LPAREN explist RPAREN] with ['(',<node @ 0x7f6999eba210>,')'] and goto state 47
   yacc.py: 503:Result : <node @ 0x7f6999eba050> (<__main__.node object at 0x7f6999eba050>)
   yacc.py: 408:
   yacc.py: 409:State  : 47
   yacc.py: 433:Stack  : chunk if exp then return prefixexp args . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [functioncall -> prefixexp args] with [<node @ 0x7f6999eb5c10>,<node @ 0x7f6999eba050>] and goto state 38
   yacc.py: 503:Result : <node @ 0x7f6999eb5bd0> (<__main__.node object at 0x7f6999eb5bd0>)
   yacc.py: 408:
   yacc.py: 409:State  : 38
   yacc.py: 433:Stack  : chunk if exp then return functioncall . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [prefixexp -> functioncall] with [<node @ 0x7f6999eb5bd0>] and goto state 67
   yacc.py: 503:Result : <node @ 0x7f6999eba110> (<__main__.node object at 0x7f6999eba110>)
   yacc.py: 408:
   yacc.py: 409:State  : 67
   yacc.py: 433:Stack  : chunk if exp then return prefixexp . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [retexp -> prefixexp] with [<node @ 0x7f6999eba110>] and goto state 68
   yacc.py: 503:Result : <node @ 0x7f6999eba250> (<__main__.node object at 0x7f6999eba250>)
   yacc.py: 408:
   yacc.py: 409:State  : 68
   yacc.py: 433:Stack  : chunk if exp then return retexp . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [retexplist -> retexp] with [<node @ 0x7f6999eba250>] and goto state 73
   yacc.py: 503:Result : <node @ 0x7f6999eba2d0> (<__main__.node object at 0x7f6999eba2d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 73
   yacc.py: 433:Stack  : chunk if exp then return retexplist . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [laststat -> return retexplist] with ['return',<node @ 0x7f6999eba2d0>] and goto state 8
   yacc.py: 503:Result : <node @ 0x7f6999eba310> (<__main__.node object at 0x7f6999eba310>)
   yacc.py: 408:
   yacc.py: 409:State  : 8
   yacc.py: 433:Stack  : chunk if exp then laststat . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [sdash -> laststat] with [<node @ 0x7f6999eba310>] and goto state 60
   yacc.py: 503:Result : <node @ 0x7f6999eb5b50> (<__main__.node object at 0x7f6999eb5b50>)
   yacc.py: 408:
   yacc.py: 409:State  : 60
   yacc.py: 433:Stack  : chunk if exp then sdash . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [block -> sdash] with [<node @ 0x7f6999eb5b50>] and goto state 165
   yacc.py: 503:Result : <node @ 0x7f6999eba290> (<__main__.node object at 0x7f6999eba290>)
   yacc.py: 408:
   yacc.py: 409:State  : 165
   yacc.py: 433:Stack  : chunk if exp then block . LexToken(end,'end',1,515)
   yacc.py: 472:Action : Reduce rule [empty -> <empty>] with [] and goto state 204
   yacc.py: 542:Result : <NoneType @ 0x7f69a0a5af40> (None)
   yacc.py: 408:
   yacc.py: 409:State  : 204
   yacc.py: 433:Stack  : chunk if exp then block empty . LexToken(end,'end',1,515)
   yacc.py: 469:Action : Reduce rule [ifblock -> empty] with [None] and goto state 205
   yacc.py: 503:Result : <node @ 0x7f6999eba350> (<__main__.node object at 0x7f6999eba350>)
   yacc.py: 408:
   yacc.py: 409:State  : 205
   yacc.py: 433:Stack  : chunk if exp then block ifblock . LexToken(end,'end',1,515)
   yacc.py: 443:Action : Shift and goto state 218
   yacc.py: 408:
   yacc.py: 409:State  : 218
   yacc.py: 433:Stack  : chunk if exp then block ifblock end . $end
   yacc.py: 469:Action : Reduce rule [stat -> if exp then block ifblock end] with ['if',<node @ 0x7f6999eb5ad0>,'then',<node @ 0x7f6999eba290>,<node @ 0x7f6999eba350>,'end'] and goto state 43
   yacc.py: 503:Result : <node @ 0x7f6999eba3d0> (<__main__.node object at 0x7f6999eba3d0>)
   yacc.py: 408:
   yacc.py: 409:State  : 43
   yacc.py: 433:Stack  : chunk stat . $end
   yacc.py: 469:Action : Reduce rule [chunk -> chunk stat] with [<node @ 0x7f6999eb55d0>,<node @ 0x7f6999eba3d0>] and goto state 3
   yacc.py: 503:Result : <node @ 0x7f6999eb5910> (<__main__.node object at 0x7f6999eb5910>)
   yacc.py: 408:
   yacc.py: 409:State  : 3
   yacc.py: 433:Stack  : chunk . $end
   yacc.py: 469:Action : Reduce rule [sdash -> chunk] with [<node @ 0x7f6999eb5910>] and goto state 21
   yacc.py: 503:Result : <node @ 0x7f6999eb5a90> (<__main__.node object at 0x7f6999eb5a90>)
   yacc.py: 408:
   yacc.py: 409:State  : 21
   yacc.py: 433:Stack  : sdash . $end
   yacc.py: 564:Done   : Returning <node @ 0x7f6999eb5a90> (<__main__.node object at 0x7f6999eb5a90>)
   yacc.py: 565:PLY: PARSE DEBUG END
